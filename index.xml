<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Forvision project on the Forvision project</title>
    <link>/</link>
    <description>Recent content in Forvision project on the Forvision project</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Time Series Table Schema (TSTS)</title>
      <link>/approach/data-structures/tsts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/approach/data-structures/tsts/</guid>
      <description>In time series table schema each observation is stored in a table as a separate record (line):
   Field name (column name) Description Examples     series_id* Time series identifier - a unique name that identifies a time series “Y1”   timestamp* Any representation of the period to which the observation relates. We recommend the use of the ISO 8601 standard &amp;ldquo;1997&amp;rdquo; in case of yearly data, &amp;ldquo;1997-01-20&amp;rdquo; in case of daily data, &amp;ldquo;1997-11&amp;rdquo; in case of monthly data, &amp;ldquo;1997-W03&amp;rdquo; in case of weekly data, &amp;ldquo;2018-Q2&amp;rdquo; in case of quarterly data   value The value observed 1000    *the key (the unique value that should not duplicated) for this table schema is series_id, timestamp.</description>
    </item>
    
    <item>
      <title>Forecast Table Schema (FTS)</title>
      <link>/approach/data-structures/fts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/approach/data-structures/fts/</guid>
      <description>Forecast Table Schema is needed to store forecasting results.
Each table line corresponds to all the forecasting results obtained for a given time series series using a given method for a given horizon for a given origin:
   Field name (column name) Description Examples     series_id* Time series ID for which the forecast was calculated &amp;ldquo;Y1&amp;rdquo;   timestamp* Any representation of the period to which the observation relates.</description>
    </item>
    
    <item>
      <title>Actual and Forecast Table Schema (AFTS)</title>
      <link>/approach/data-structures/afts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/approach/data-structures/afts/</guid>
      <description>Sometimes it is convenient to have a table where we have both actuals and forecasts in one row. AFTS is the same as FTS, but the additional column “value” is used to represent the actual time series value. If no actual is available, then [value]=”NA”.</description>
    </item>
    
    <item>
      <title>Prediction-Realization Diagram</title>
      <link>/approach/exploratory-tools.md/prd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/approach/exploratory-tools.md/prd/</guid>
      <description>The function plotPRD of the forvision package plots the Prediction-Realization Diagram for the given data from dataset containing columns value, forecast, and method (AFTS).
Here’s a prediction-realization diagram created by the function plotPRD:
# Load time series and forecast data from url ts &amp;lt;- read.csv(&amp;#34;https://raw.githubusercontent.com/forvis/forvision_data/master/M3_yearly_TSTS.csv&amp;#34;, stringsAsFactors = FALSE) fc &amp;lt;- read.csv(&amp;#34;https://raw.githubusercontent.com/forvis/forvision_data/master/M3_yearly_FTS.csv&amp;#34;, stringsAsFactors = FALSE) # Create AFTS shema library(forvision) af &amp;lt;- createAFTS(ts, fc) plotPRD(af) The resulting prediction-relization digram plotted in logarithmic scales by using the option setting useLog = TRUE:</description>
    </item>
    
    <item>
      <title>Fanchart</title>
      <link>/approach/exploratory-tools.md/fanchart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/approach/exploratory-tools.md/fanchart/</guid>
      <description>The function plotFAN of the forvision package plots the fanchart for the given data from dataset.
Here’s a fanchart created by the function plotFAN for time series of id = &amp;ldquo;M350&amp;rdquo;:
# Load time series and forecast data from url ts &amp;lt;- read.csv(&amp;#34;https://raw.githubusercontent.com/forvis/forvision_data/master/M3_monthly_TSTS.csv&amp;#34;, stringsAsFactors = FALSE) fc &amp;lt;- read.csv(&amp;#34;https://raw.githubusercontent.com/forvis/forvision_data/master/M3_monthly_PIs_FTS.csv&amp;#34;, stringsAsFactors = FALSE) # prepare appropriate time-based object timestamp columns for the data_ts and data_fs library(zoo) ts$timestamp_dbo &amp;lt;- as.yearmon(ts$timestamp, format = &amp;#39;%Y-%m&amp;#39;) fc$timestamp_dbo &amp;lt;- as.</description>
    </item>
    
    <item>
      <title>Fixed origin graph</title>
      <link>/approach/exploratory-tools.md/fixed-origin-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/approach/exploratory-tools.md/fixed-origin-graph/</guid>
      <description>The function plotFixedOrigin of the forvision package plots the fixed origin graph for the given data from dataset.
Here’s a fixed origin graph created by the function plotFixedOrigin for time series of id = &amp;ldquo;M1&amp;rdquo;:
# Load time series and forecast data from url ts &amp;lt;- read.csv(&amp;#34;https://raw.githubusercontent.com/forvis/forvision_data/master/M3_monthly_TSTS.csv&amp;#34;, stringsAsFactors = FALSE) fc &amp;lt;- read.csv(&amp;#34;https://raw.githubusercontent.com/forvis/forvision_data/master/M3_monthly_FTS.csv&amp;#34;, stringsAsFactors = FALSE) # prepare appropriate time-based object timestamp columns for the data_ts and data_fs library(zoo) ts$timestamp_dbo &amp;lt;- as.</description>
    </item>
    
    <item>
      <title>Fixed horizon graph</title>
      <link>/approach/exploratory-tools.md/fixed-horizon-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/approach/exploratory-tools.md/fixed-horizon-graph/</guid>
      <description>Fixed horizon graph</description>
    </item>
    
    <item>
      <title> Point forecasts evaluation</title>
      <link>/approach/accuracy-tools/point-forecast-evaluation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/approach/accuracy-tools/point-forecast-evaluation/</guid>
      <description>Mean absolute percentage error for different forecasting methods and different horizons is generated using the function calculateMAPEs of the forvision package for the given data from dataset.
library(forvision) calculateMAPEs(af) ## $`MAPE` horizon = 1 horizon = 2 horizon = 3 horizon = 4 horizon = 5 horizon = 6 average MAPE ## NAIVE2 8.360053 19.23712 21.70531 23.45871 25.17578 27.35164 20.88143 ## SINGLE 8.426719 19.53460 21.70985 23.59725 25.35748 27.93413 21.09334 ## HOLT 8.</description>
    </item>
    
    <item>
      <title>PIs evaluation</title>
      <link>/approach/accuracy-tools/pis-evaluation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/approach/accuracy-tools/pis-evaluation/</guid>
      <description>The Validation of PIs is generated using the function validatePIs of the forvision package for the given data from dataset:
library(forvision) plotHitrateChart(ts, fc, pi = 80) To cite this website, please use the following reference:
Sai, C., Davydenko, A., &amp;amp; Shcherbakov, M. (date). The Forvision Project. Retrieved from https://forvis.github.io/
© 2018 Sai, C., Davydenko, A., &amp;amp; Shcherbakov, M. All Rights Reserved. Short sections of text, not exceed two paragraphs, may be quoted without explicit permission, provided that full acknowledgement is given.</description>
    </item>
    
    <item>
      <title>Test cases</title>
      <link>/datasets/test-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/datasets/test-cases/</guid>
      <description>Example 1
In this example we have data containing actuals for several time time series + corresponding out-of-sample forecasts with different horizons produced using different forecasting methods at different origins.
   File Description Schema     example1_TSTS.csv Actual observations TSTS   example1_FTS.csv Forecasts FTS    To cite this website, please use the following reference:
Sai, C., Davydenko, A., &amp;amp; Shcherbakov, M. (date). The Forvision Project.</description>
    </item>
    
    <item>
      <title>M3-Competition data</title>
      <link>/datasets/m3-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/datasets/m3-data/</guid>
      <description>The time series from the IJF-M3 competition (Makridakis and Hibon, 2000) and M3 forecast data:
   File Description Schema     M3_yearly_TSTS.csv Actual observations TSTS   M3_yearly_FTS.csv Forecasts FTS   M3_quarterly_TSTS.csv Actual observations TSTS   M3_quarterly_FTS.csv Forecasts FTS   M3_monthly_TSTS.csv Actual observations TSTS   M3_monthly_FTS.csv Forecasts FTS   M3_other_TSTS.csv Actual observations TSTS   M3_other_FTS.csv Forecasts FTS    To cite this website, please use the following reference:</description>
    </item>
    
    <item>
      <title>M3 prediction intervals</title>
      <link>/datasets/m3-pis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/datasets/m3-pis/</guid>
      <description>The time series from the IJF-M3 competition (Makridakis and Hibon, 2000) and M3 interval forecast data using ARIMA model:
   File Description Schema     M3_yearly_TSTS.csv Actual observations TSTS   M3_yearly_PIs_FTS.csv Forecasts FTS   M3_quarterly_TSTS.csv Actual observations TSTS   M3_quarterly_PIs_FTS.csv Forecasts FTS   M3_monthly_TSTS.csv Actual observations TSTS   M3_monthly_PIs_FTS.csv Forecasts FTS   M3_other_TSTS.csv Actual observations TSTS   M3_other_PIs_FTS.csv Forecasts FTS    To cite this website, please use the following reference:</description>
    </item>
    
    <item>
      <title>How to download and install</title>
      <link>/forvision-package/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/forvision-package/install/</guid>
      <description>Installation You can install the development version of the forvision package (containing the latest improvements and bug fixes) from github:
# install.packages(&amp;#34;devtools&amp;#34;) devtools::install_github(&amp;#34;forvis/forvision&amp;#34;, build_vignettes = TRUE) To cite this website, please use the following reference:
Sai, C., Davydenko, A., &amp;amp; Shcherbakov, M. (date). The Forvision Project. Retrieved from https://forvis.github.io/
© 2018 Sai, C., Davydenko, A., &amp;amp; Shcherbakov, M. All Rights Reserved. Short sections of text, not exceed two paragraphs, may be quoted without explicit permission, provided that full acknowledgement is given.</description>
    </item>
    
    <item>
      <title>Loading data</title>
      <link>/forvision-package/load-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/forvision-package/load-data/</guid>
      <description>Our workflow assumes that input data for forecast evaluation is stored in a special format:
 for actuals we use the Time Series Table Schema (TSTS),
 for forecasts we use the Forecast Table Schema (FTS).
  Here we use .csv files stored online. Alternatively, a database or local files can be used. For this example we use the M3-Competition dataset formatted according to the above schemas.
The first step is to load actuals and forecasts:</description>
    </item>
    
    <item>
      <title>Exploratory analysis</title>
      <link>/forvision-package/exploratory-analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/forvision-package/exploratory-analysis/</guid>
      <description>After loading input data, need to explore it in order to
 double-check if the data was loaded and prepared correctly
 examine the range and the distribution for forecasts and actuals
 detect possible outliers or unexpected cases, the presence of zero cases, negative cases, missing actuals and the frequency of such cases
  Eventually, at this step we want i) to confirm that the data is of appropriate quality for measuring accuracy performance and ii) to choose the error metrics that correspond to the features of the data.</description>
    </item>
    
    <item>
      <title>Accuracy evaluation</title>
      <link>/forvision-package/accuracy-evaluation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/forvision-package/accuracy-evaluation/</guid>
      <description>Measuring the accuracy of point forecasts
Let’s look at the M3 yearly data. In our exploratory analysis we used the prediction-realization diagram to assess the distribution of actuals and forecasts. We spotted some zero actuals and negative forecasts, which makes some popular metrics such as MAPE difficult to use. But even having only positive actuals and forecasts, MAPE can be unreliable or even misleading (Davydenko and Fildes, 2013). Nonetheless, MAPE remains very popular.</description>
    </item>
    
    <item>
      <title>Problems and Issues</title>
      <link>/forvision-package/issues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/forvision-package/issues/</guid>
      <description>Problems and Issues Please report any issues you may encounter in our issues page on github</description>
    </item>
    
    <item>
      <title>Project team</title>
      <link>/team/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/team/</guid>
      <description>Sai Van Cuong: PhD student of CAD Department, Volgograd State Technical University
Dr. Andrey Davydenko: Data Science Specialist, JSC CSBI
Prof. Shcherbakov Maxim: Head of CAD Department, Volgograd State Technical University</description>
    </item>
    
  </channel>
</rss>